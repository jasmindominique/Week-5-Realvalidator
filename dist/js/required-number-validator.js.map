{"version":3,"sources":["required-number-validator.js"],"names":["RequiredNumberValidator","domElement","numbersToCheck","errors","numberInput","$field","value","firstNumber","secondNumber","length","console","log","charactersToCheck","InputValidator"],"mappings":";;;;;;;;;;;;;;;;;;IAAMA,uB;;;;;AAAiD;AACtD,mCAAYC,UAAZ,EAAwBC,cAAxB,EAAuC;AAAA;;AAAA;;AAAE;AACxC,iGAAMD,UAAN,GADsC,CACpB;;AADoB,+DAQ3B,YAAM;AAChB,YAAKE,MAAL,GAAc,EAAd;AAEA,UAAIC,WAAW,GAAG,MAAKC,MAAL,CAAYC,KAA9B,CAHgB,CAKhB;AACA;AACA;AAEA;;AAEA,UAAIC,WAAW,GAAG,MAAKL,cAAL,CAAoB,CAApB,CAAlB;AAEA,UAAIM,YAAY,GAAG,MAAKN,cAAL,CAAoB,MAAKA,cAAL,CAAoBO,MAApB,GAA6B,CAAjD,CAAnB;AAEC,KAvBoC;;AAGtC,UAAKP,cAAL,GAAoBA,cAApB,CAHsC,CAGH;;AAEnCQ,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCV,UAAvC,EAAmDW,iBAAnD;AALsC;AAMtC;;;EAPoCC,c","sourcesContent":["class RequiredNumberValidator extends InputValidator { //with using extends - it's a keyword that facilitates the inheretence. These attributed are being added into the Input Validator \n\tconstructor(domElement, numbersToCheck){ //this is the second parameter or argument that the constructor is looking for. character to check is what has to be \n\t\tsuper(domElement) //call the constructor from input validator.....can also be known as new toolTip(selector) - not this exact name but something like that.         //says \"hey\"! we need to run the constructor of the parent class.                                   //.this is a variable accesible to everyone apart of the chain. With using the required field this is looking for the form - each step has the do with the prefious - first the form - then the browser will search for the required fields - input and lastly  extends -                              this is a child of this are \n\t\t\t\n\t\tthis.numbersToCheck=numbersToCheck // remember this variable - keep track of this wherever it is in our class\n\n\t\tconsole.log('RequiredNumberValidator', domElement, charactersToCheck)\n\t}\n\n\t\tvalidate = () => {\n\t\t\tthis.errors = [];\n\n\t\t\tlet numberInput = this.$field.value;\n\n\t\t\t// if (!(numberInput.length == 10 || numberInput.length == 11)) {\n\t\t\t//     alert(\"Please enter a valid US phone number.\")\n\t\t\t//     return false\n\t\t\t\t\n\t\t\t// \t}\n\n\t\t\tlet firstNumber = this.numbersToCheck[0];\n\n\t\t\tlet secondNumber = this.numbersToCheck[this.numbersToCheck.length - 1];\n\t\t\t\n\t\t\t}\n\t\t\n\t\t\t\n\n\t}\n\n"],"file":"required-number-validator.js"}